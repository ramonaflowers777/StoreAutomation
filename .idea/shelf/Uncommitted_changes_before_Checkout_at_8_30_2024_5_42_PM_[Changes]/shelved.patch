Index: src/main/java/org/example/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Main.java b/src/main/java/org/example/Main.java
new file mode 100644
--- /dev/null	(date 1725019255581)
+++ b/src/main/java/org/example/Main.java	(date 1725019255581)
@@ -0,0 +1,7 @@
+package org.example;
+
+public class Main {
+    public static void main(String[] args) {
+        System.out.println("Hello world!");
+    }
+}
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
new file mode 100644
--- /dev/null	(date 1725019255579)
+++ b/pom.xml	(date 1725019255579)
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>org.example</groupId>
+    <artifactId>unit_selenium</artifactId>
+    <version>1.0-SNAPSHOT</version>
+
+    <properties>
+        <maven.compiler.source>17</maven.compiler.source>
+        <maven.compiler.target>17</maven.compiler.target>
+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.seleniumhq.selenium</groupId>
+            <artifactId>selenium-java</artifactId>
+            <version>4.19.1</version>
+        </dependency>
+        <dependency>
+            <groupId>org.testng</groupId>
+            <artifactId>testng</artifactId>
+            <version>7.8.0</version>
+            <scope>test</scope>
+        </dependency>
+    </dependencies>
+
+</project>
Index: src/test/java/tests/BaseTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/tests/BaseTest.java b/src/test/java/tests/BaseTest.java
new file mode 100644
--- /dev/null	(date 1725019260510)
+++ b/src/test/java/tests/BaseTest.java	(date 1725019260510)
@@ -0,0 +1,32 @@
+package tests;
+
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.chrome.ChromeDriver;
+import org.openqa.selenium.support.ui.WebDriverWait;
+import org.testng.annotations.AfterMethod;
+import org.testng.annotations.BeforeMethod;
+
+import java.time.Duration;
+
+public abstract class BaseTest {
+    protected static final String URL = "https://the-internet.herokuapp.com/";
+    protected static final int MAX_WAIT = 10;
+    protected static final String PRECISE_TEXT_XPATH = "//*[text()='%s']";
+    protected static final String PARTICULAR_TEXT_XPATH = "//*[contains(text(),'%s')]";
+    protected static final String RELATIVE_RESOURCE_PATH = "src/test/resources/";
+    protected WebDriver driver;
+    protected WebDriverWait wait;
+
+    @BeforeMethod
+    public void setup() {
+        driver = new ChromeDriver();
+        driver.manage().window().maximize();
+        wait = new WebDriverWait(driver, Duration.ofSeconds(MAX_WAIT));
+        driver.get(URL);
+    }
+
+    @AfterMethod
+    public void teardown() {
+        driver.quit();
+    }
+}
Index: src/test/java/tests/AlertTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/tests/AlertTest.java b/src/test/java/tests/AlertTest.java
new file mode 100644
--- /dev/null	(date 1725019255582)
+++ b/src/test/java/tests/AlertTest.java	(date 1725019255582)
@@ -0,0 +1,17 @@
+package tests;
+
+import org.openqa.selenium.By;
+import org.testng.annotations.Test;
+
+public class AlertTest extends BaseTest {
+    private final By jsAlert = By.xpath(String.format(PRECISE_TEXT_XPATH, "JavaScript Alerts"));
+    private final By clickForJsAlertButton = By.xpath("//button[@onclick='jsAlert()']");
+
+    @Test
+    public void alertTest() {
+        driver.findElement(jsAlert).click();
+        driver.findElement(clickForJsAlertButton).click();
+        // todo: accept alert
+        // todo: assert success message
+    }
+}
Index: src/test/java/tests/DataTableTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/tests/DataTableTests.java b/src/test/java/tests/DataTableTests.java
new file mode 100644
--- /dev/null	(date 1725019260513)
+++ b/src/test/java/tests/DataTableTests.java	(date 1725019260513)
@@ -0,0 +1,14 @@
+package tests;
+
+import org.openqa.selenium.By;
+import org.testng.annotations.Test;
+
+public class DataTableTests extends BaseTest {
+    private final By sortableDataTables = By.xpath(String.format(PRECISE_TEXT_XPATH, "Sortable Data Tables"));
+
+    @Test
+    public void dataTableTest() {
+        driver.findElement(sortableDataTables).click();
+        // todo: assert due sum
+    }
+}
Index: src/test/java/tests/BasicAuthTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/tests/BasicAuthTest.java b/src/test/java/tests/BasicAuthTest.java
new file mode 100644
--- /dev/null	(date 1725019260511)
+++ b/src/test/java/tests/BasicAuthTest.java	(date 1725019260511)
@@ -0,0 +1,19 @@
+package tests;
+
+import org.openqa.selenium.By;
+import org.testng.Assert;
+import org.testng.annotations.Test;
+
+public class BasicAuthTest extends BaseTest {
+    private final By basicAuth = By.xpath(String.format(PRECISE_TEXT_XPATH, "Basic Auth"));
+    private final By successAuth = By.xpath(String.format(PARTICULAR_TEXT_XPATH,
+            "Congratulations! You must have the proper credentials"));
+
+    //todo: add basic auth
+
+    @Test
+    public void basicAuthTest() {
+        driver.findElement(basicAuth).click();
+        Assert.assertTrue(driver.findElement(successAuth).isDisplayed(), "Message is not displayed");
+    }
+}
Index: src/test/java/tests/FileDownloadTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/tests/FileDownloadTest.java b/src/test/java/tests/FileDownloadTest.java
new file mode 100644
--- /dev/null	(date 1725019255583)
+++ b/src/test/java/tests/FileDownloadTest.java	(date 1725019255583)
@@ -0,0 +1,21 @@
+package tests;
+
+import org.openqa.selenium.By;
+import org.testng.Assert;
+import org.testng.annotations.Test;
+
+public class FileDownloadTest extends BaseTest {
+    private final String fileName = "Test.txt";
+    private final By fileDownload = By.xpath(String.format(PRECISE_TEXT_XPATH, "File Download"));
+    private final By fileNameXpath = By.xpath(String.format(PRECISE_TEXT_XPATH, fileName));
+
+    @Test
+    public void fileDownloadTest() {
+        driver.findElement(fileDownload).click();
+        Assert.assertTrue(driver.findElement(fileNameXpath).isDisplayed(), "File is not displayed");
+        driver.findElement(fileNameXpath).click();
+        // todo: assert file is downloaded
+    }
+
+    // todo: delete file
+}
Index: src/test/java/tests/DynamicControlsTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/tests/DynamicControlsTest.java b/src/test/java/tests/DynamicControlsTest.java
new file mode 100644
--- /dev/null	(date 1725019260513)
+++ b/src/test/java/tests/DynamicControlsTest.java	(date 1725019260513)
@@ -0,0 +1,18 @@
+package tests;
+
+import org.openqa.selenium.By;
+import org.testng.annotations.Test;
+
+public class DynamicControlsTest extends BaseTest {
+    private final By dynamicControls = By.xpath(String.format(PRECISE_TEXT_XPATH, "Dynamic Controls"));
+    private final By enable = By.xpath(String.format(PRECISE_TEXT_XPATH, "Enable"));
+
+    @Test
+    public void dynamicControlsTest() {
+        driver.findElement(dynamicControls).click();
+        driver.findElement(enable).click();
+        // todo: assert input is enabled
+        // todo: input random generated text
+        // todo: assert inputted text
+    }
+}
Index: src/test/java/tests/FramesTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/tests/FramesTest.java b/src/test/java/tests/FramesTest.java
new file mode 100644
--- /dev/null	(date 1725019255585)
+++ b/src/test/java/tests/FramesTest.java	(date 1725019255585)
@@ -0,0 +1,29 @@
+package tests;
+
+import org.openqa.selenium.By;
+import org.testng.Assert;
+import org.testng.annotations.Test;
+
+import java.util.UUID;
+
+public class FramesTest extends BaseTest {
+    private final String initText = "Your content goes here.";
+    private final String textIsNotDisplayedMsg = "Text is not displayed";
+    private final By frames = By.xpath(String.format(PRECISE_TEXT_XPATH, "Frames"));
+    private final By iframe = By.xpath(String.format(PRECISE_TEXT_XPATH, "iFrame"));
+    private final By edit = By.xpath(String.format(PRECISE_TEXT_XPATH, "Edit"));
+    private final By undo = By.xpath(String.format(PRECISE_TEXT_XPATH, "Undo"));
+    private final String randomText = UUID.randomUUID().toString();
+
+    @Test
+    public void iFrameTest() {
+        driver.findElement(frames).click();
+        driver.findElement(iframe).click();
+        //todo: input text to the text field
+        Assert.assertTrue(driver.findElement(By.xpath(String.format(PRECISE_TEXT_XPATH, initText + randomText))).isDisplayed(),
+                textIsNotDisplayedMsg);
+        driver.findElement(edit).click();
+        driver.findElement(undo).click();
+        // todo: assert text is not displayed
+    }
+}
Index: src/test/java/tests/FileUploadTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/tests/FileUploadTest.java b/src/test/java/tests/FileUploadTest.java
new file mode 100644
--- /dev/null	(date 1725019260514)
+++ b/src/test/java/tests/FileUploadTest.java	(date 1725019260514)
@@ -0,0 +1,20 @@
+package tests;
+
+import org.openqa.selenium.By;
+import org.testng.annotations.Test;
+
+import java.io.File;
+
+public class FileUploadTest extends BaseTest {
+    private final String fileName = "file.json";
+    private final String filePath = RELATIVE_RESOURCE_PATH + fileName;
+    private final By fileUpload = By.xpath(String.format(PRECISE_TEXT_XPATH, "File Upload"));
+
+    @Test
+    public void fileUploadTest() {
+        driver.findElement(fileUpload).click();
+        File fileToUpload = new File(filePath);
+        // todo: upload the file
+        // todo: assert file is uploaded
+    }
+}
