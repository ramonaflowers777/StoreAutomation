Index: src/test/java/tests/BasicAuthTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests;\r\n\r\nimport constants.MainPageNavigation;\r\nimport org.testng.Assert;\r\nimport pages.BasicAuthPage;\r\nimport org.testng.annotations.BeforeMethod;\r\nimport org.testng.annotations.Test;\r\nimport utils.SettingsTestData;\r\n\r\npublic class BasicAuthTest extends BaseTest {\r\n    private final BasicAuthPage basicAuthPage = new BasicAuthPage();\r\n\r\n    @BeforeMethod\r\n    public void auth() {\r\n        browser.network().addBasicAuthentication(\r\n                SettingsTestData.getEnvData().getDomain(),\r\n                SettingsTestData.getUserData().getUsername(),\r\n                SettingsTestData.getUserData().getPassword());\r\n    }\r\n\r\n    @Test\r\n    public void basicAuthTest() {\r\n        mainPage.clickNavigationLink(MainPageNavigation.BASIC_AUTH);\r\n        Assert.assertTrue(basicAuthPage.isSuccessMsgDisplayed(),\"Success message was not displayed\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/tests/BasicAuthTest.java b/src/test/java/tests/BasicAuthTest.java
--- a/src/test/java/tests/BasicAuthTest.java	(revision 23519ffc95f304ac088c5f0540bd4cc4a202bc5e)
+++ b/src/test/java/tests/BasicAuthTest.java	(date 1728142830616)
@@ -13,7 +13,7 @@
     @BeforeMethod
     public void auth() {
         browser.network().addBasicAuthentication(
-                SettingsTestData.getEnvData().getDomain(),
+                SettingsTestData.getEnvData().getHost(),
                 SettingsTestData.getUserData().getUsername(),
                 SettingsTestData.getUserData().getPassword());
     }
Index: src/test/java/pages/JavaScriptAlertsPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package pages;\r\n\r\nimport aquality.selenium.browser.AqualityServices;\r\nimport aquality.selenium.elements.interfaces.IButton;\r\nimport aquality.selenium.elements.interfaces.IElementFactory;\r\nimport aquality.selenium.elements.interfaces.ILabel;\r\nimport aquality.selenium.forms.Form;\r\nimport constants.LocatorConstants;\r\nimport org.openqa.selenium.By;\r\n\r\npublic class JavaScriptAlertsPage extends Form {\r\n    private static final String PAGE_NAME = \"JavaScript Alerts\";\r\n\r\n    private final IElementFactory elementFactory = AqualityServices.getElementFactory();\r\n\r\n    private final By clickForJsAlertButton = By.xpath(\"//button[@onclick='jsAlert()']\");\r\n    private final By successMessage = By.xpath(String.format(LocatorConstants.PRECISE_TEXT_XPATH, \"You successfully clicked an alert\"));\r\n\r\n    private final IButton clickForJsAlertBtn = elementFactory.getButton(clickForJsAlertButton, \"Click for JS alert\");\r\n    private final ILabel successLbl = elementFactory.getLabel(successMessage, \"Success\");\r\n\r\n    public JavaScriptAlertsPage() {\r\n        super(By.xpath(String.format(LocatorConstants.PRECISE_TEXT_XPATH, PAGE_NAME)), PAGE_NAME);\r\n    }\r\n\r\n    public void clickForJsAlertBtn() {\r\n        clickForJsAlertBtn.click();\r\n    }\r\n\r\n    public boolean isSuccessLabelDisplayed() {\r\n        return successLbl.state().isDisplayed();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/pages/JavaScriptAlertsPage.java b/src/test/java/pages/JavaScriptAlertsPage.java
--- a/src/test/java/pages/JavaScriptAlertsPage.java	(revision 23519ffc95f304ac088c5f0540bd4cc4a202bc5e)
+++ b/src/test/java/pages/JavaScriptAlertsPage.java	(date 1723237307000)
@@ -10,12 +10,9 @@
 
 public class JavaScriptAlertsPage extends Form {
     private static final String PAGE_NAME = "JavaScript Alerts";
-
     private final IElementFactory elementFactory = AqualityServices.getElementFactory();
-
     private final By clickForJsAlertButton = By.xpath("//button[@onclick='jsAlert()']");
     private final By successMessage = By.xpath(String.format(LocatorConstants.PRECISE_TEXT_XPATH, "You successfully clicked an alert"));
-
     private final IButton clickForJsAlertBtn = elementFactory.getButton(clickForJsAlertButton, "Click for JS alert");
     private final ILabel successLbl = elementFactory.getLabel(successMessage, "Success");
 
Index: src/test/java/pages/MainPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package pages;\r\n\r\nimport aquality.selenium.browser.AqualityServices;\r\nimport aquality.selenium.elements.interfaces.ILink;\r\nimport aquality.selenium.forms.Form;\r\nimport constants.LocatorConstants;\r\nimport constants.MainPageNavigation;\r\nimport org.openqa.selenium.By;\r\n\r\npublic class MainPage extends Form {\r\n\r\n    public MainPage() {\r\n        super(By.xpath(String.format(LocatorConstants.PRECISE_TEXT_XPATH, \"Welcome to the-internet\")), \"Main Page\");\r\n    }\r\n\r\n    private ILink getNavigationLink(MainPageNavigation navigation) {\r\n        return AqualityServices.getElementFactory().getLink(By.xpath(String.format(LocatorConstants.PRECISE_TEXT_XPATH,\r\n                navigation.getLabel())), navigation.getLabel());\r\n    }\r\n\r\n    public void clickNavigationLink(MainPageNavigation navigation) {\r\n        getNavigationLink(navigation).click();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/pages/MainPage.java b/src/test/java/pages/MainPage.java
--- a/src/test/java/pages/MainPage.java	(revision 23519ffc95f304ac088c5f0540bd4cc4a202bc5e)
+++ b/src/test/java/pages/MainPage.java	(date 1723237307000)
@@ -4,7 +4,6 @@
 import aquality.selenium.elements.interfaces.ILink;
 import aquality.selenium.forms.Form;
 import constants.LocatorConstants;
-import constants.MainPageNavigation;
 import org.openqa.selenium.By;
 
 public class MainPage extends Form {
@@ -13,12 +12,12 @@
         super(By.xpath(String.format(LocatorConstants.PRECISE_TEXT_XPATH, "Welcome to the-internet")), "Main Page");
     }
 
-    private ILink getNavigationLink(MainPageNavigation navigation) {
+    private ILink getNavigationLink(String navigation) {
         return AqualityServices.getElementFactory().getLink(By.xpath(String.format(LocatorConstants.PRECISE_TEXT_XPATH,
-                navigation.getLabel())), navigation.getLabel());
+                navigation)), navigation);
     }
 
-    public void clickNavigationLink(MainPageNavigation navigation) {
+    public void clickNavigationLink(String navigation) {
         getNavigationLink(navigation).click();
     }
 }
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>org.example</groupId>\r\n    <artifactId>java_unit_framework</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.testng</groupId>\r\n            <artifactId>testng</artifactId>\r\n            <version>7.8.0</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.github.aquality-automation</groupId>\r\n            <artifactId>aquality-selenium</artifactId>\r\n            <version>4.5.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <version>1.18.30</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.awaitility</groupId>\r\n            <artifactId>awaitility</artifactId>\r\n            <version>4.2.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.google.code.gson</groupId>\r\n            <artifactId>gson</artifactId>\r\n            <version>2.10.1</version>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 23519ffc95f304ac088c5f0540bd4cc4a202bc5e)
+++ b/pom.xml	(date 1723237307000)
@@ -5,13 +5,17 @@
     <modelVersion>4.0.0</modelVersion>
 
     <groupId>org.example</groupId>
-    <artifactId>java_unit_framework</artifactId>
+    <artifactId>unit_bdd</artifactId>
     <version>1.0-SNAPSHOT</version>
 
     <properties>
         <maven.compiler.source>17</maven.compiler.source>
         <maven.compiler.target>17</maven.compiler.target>
         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+        <allure.version>2.21.0</allure.version>
+        <aspectj.version>1.9.22.1</aspectj.version>
+        <cucumber.version>5.7.0</cucumber.version>
+        <allure.maven.version>2.12.0</allure.maven.version>
     </properties>
 
     <dependencies>
@@ -22,26 +26,96 @@
             <scope>test</scope>
         </dependency>
         <dependency>
-            <groupId>com.github.aquality-automation</groupId>
-            <artifactId>aquality-selenium</artifactId>
-            <version>4.5.0</version>
+            <groupId>org.awaitility</groupId>
+            <artifactId>awaitility</artifactId>
+            <version>4.2.0</version>
         </dependency>
         <dependency>
             <groupId>org.projectlombok</groupId>
             <artifactId>lombok</artifactId>
             <version>1.18.30</version>
-            <scope>provided</scope>
         </dependency>
         <dependency>
-            <groupId>org.awaitility</groupId>
-            <artifactId>awaitility</artifactId>
-            <version>4.2.0</version>
+            <groupId>com.github.aquality-automation</groupId>
+            <artifactId>aquality-selenium</artifactId>
+            <version>4.5.0</version>
         </dependency>
         <dependency>
             <groupId>com.google.code.gson</groupId>
             <artifactId>gson</artifactId>
             <version>2.10.1</version>
         </dependency>
+        <dependency>
+            <groupId>io.qameta.allure</groupId>
+            <artifactId>allure-testng</artifactId>
+            <version>${allure.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>io.cucumber</groupId>
+            <artifactId>cucumber-testng</artifactId>
+            <version>${cucumber.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>io.cucumber</groupId>
+            <artifactId>cucumber-java</artifactId>
+            <version>${cucumber.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>io.cucumber</groupId>
+            <artifactId>cucumber-guice</artifactId>
+            <version>${cucumber.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>io.qameta.allure</groupId>
+            <artifactId>allure-cucumber5-jvm</artifactId>
+            <version>${allure.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>org.aspectj</groupId>
+            <artifactId>aspectjweaver</artifactId>
+            <version>${aspectj.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>io.qameta.allure</groupId>
+            <artifactId>allure-maven</artifactId>
+            <version>${allure.maven.version}</version>
+        </dependency>
     </dependencies>
 
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-surefire-plugin</artifactId>
+                <version>2.22.2</version>
+                <configuration>
+                    <argLine>
+                        -javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"
+                    </argLine>
+                </configuration>
+                <dependencies>
+                    <dependency>
+                        <groupId>org.aspectj</groupId>
+                        <artifactId>aspectjweaver</artifactId>
+                        <version>${aspectj.version}</version>
+                    </dependency>
+                </dependencies>
+            </plugin>
+        </plugins>
+    </build>
+
+    <reporting>
+        <excludeDefaults>true</excludeDefaults>
+        <plugins>
+            <plugin>
+                <groupId>io.qameta.allure</groupId>
+                <artifactId>allure-maven</artifactId>
+                <version>${allure.maven.version}</version>
+                <configuration>
+                    <reportVersion>${allure.version}</reportVersion>
+                </configuration>
+            </plugin>
+        </plugins>
+    </reporting>
+
 </project>
Index: src/test/java/pages/DataTablesPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package pages;\r\n\r\nimport aquality.selenium.browser.AqualityServices;\r\nimport aquality.selenium.elements.ElementType;\r\nimport aquality.selenium.elements.interfaces.ILabel;\r\nimport aquality.selenium.forms.Form;\r\nimport constants.LocatorConstants;\r\nimport org.openqa.selenium.By;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class DataTablesPage extends Form {\r\n    private static final String NAME = \"Data Tables\";\r\n    private final By due = By.xpath(\"//*[@id='table1']//td[4]\");\r\n\r\n    public DataTablesPage() {\r\n        super(By.xpath(String.format(LocatorConstants.PRECISE_TEXT_XPATH, NAME)), NAME);\r\n    }\r\n\r\n    public List<String> getFirstDueList() {\r\n        List<String> dueList = new ArrayList<>();\r\n        for (ILabel label : getFirstDueLblList()) {\r\n            dueList.add(label.getText());\r\n        }\r\n        return dueList;\r\n    }\r\n\r\n    private List<ILabel> getFirstDueLblList() {\r\n        return AqualityServices.getElementFactory().findElements(due, \"due\", ElementType.LABEL);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/pages/DataTablesPage.java b/src/test/java/pages/DataTablesPage.java
--- a/src/test/java/pages/DataTablesPage.java	(revision 23519ffc95f304ac088c5f0540bd4cc4a202bc5e)
+++ b/src/test/java/pages/DataTablesPage.java	(date 1723237307000)
@@ -20,6 +20,7 @@
 
     public List<String> getFirstDueList() {
         List<String> dueList = new ArrayList<>();
+
         for (ILabel label : getFirstDueLblList()) {
             dueList.add(label.getText());
         }
Index: src/test/java/constants/MainPageNavigation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package constants;\r\n\r\nimport lombok.Getter;\r\n\r\n@Getter\r\npublic enum MainPageNavigation {\r\n    JAVASCRIPT_ALERT(\"JavaScript Alerts\"),\r\n    SORTABLE_DATA_TABLES(\"Sortable Data Tables\"),\r\n    DYNAMIC_CONTROLS(\"Dynamic Controls\"),\r\n    FILE_DOWNLOAD(\"File Download\"),\r\n    FILE_UPLOAD(\"File Upload\"),\r\n    BASIC_AUTH(\"Basic Auth\");\r\n\r\n    private final String label;\r\n\r\n    MainPageNavigation(String label) {\r\n        this.label = label;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/constants/MainPageNavigation.java b/src/test/java/constants/MainPageNavigation.java
--- a/src/test/java/constants/MainPageNavigation.java	(revision 23519ffc95f304ac088c5f0540bd4cc4a202bc5e)
+++ b/src/test/java/constants/MainPageNavigation.java	(date 1723237307000)
@@ -5,11 +5,7 @@
 @Getter
 public enum MainPageNavigation {
     JAVASCRIPT_ALERT("JavaScript Alerts"),
-    SORTABLE_DATA_TABLES("Sortable Data Tables"),
-    DYNAMIC_CONTROLS("Dynamic Controls"),
-    FILE_DOWNLOAD("File Download"),
-    FILE_UPLOAD("File Upload"),
-    BASIC_AUTH("Basic Auth");
+    SORTABLE_DATA_TABLES("Sortable Data Tables");
 
     private final String label;
 
Index: src/test/resources/environment/prod.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"protocol\": \"https\",\r\n  \"domain\": \"the-internet.herokuapp.com\",\r\n  \"wait\": 10,\r\n  \"host\": \"https://the-internet.herokuapp.com/\"\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/resources/environment/prod.json b/src/test/resources/environment/prod.json
--- a/src/test/resources/environment/prod.json	(revision 23519ffc95f304ac088c5f0540bd4cc4a202bc5e)
+++ b/src/test/resources/environment/prod.json	(date 1723237307000)
@@ -1,6 +1,4 @@
 {
-  "protocol": "https",
-  "domain": "the-internet.herokuapp.com",
-  "wait": 10,
-  "host": "https://the-internet.herokuapp.com/"
+  "host": "https://the-internet.herokuapp.com",
+  "wait": 10
 }
Index: src/test/java/models/EnvData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package models;\r\n\r\nimport lombok.Getter;\r\n\r\n@Getter\r\npublic class EnvData {\r\n    private String protocol;\r\n    private String domain;\r\n    private int wait;\r\n    private String host;\r\n\r\n    public String getHost() {\r\n        return protocol + \"://\" + domain;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/models/EnvData.java b/src/test/java/models/EnvData.java
--- a/src/test/java/models/EnvData.java	(revision 23519ffc95f304ac088c5f0540bd4cc4a202bc5e)
+++ b/src/test/java/models/EnvData.java	(date 1723237307000)
@@ -4,12 +4,6 @@
 
 @Getter
 public class EnvData {
-    private String protocol;
-    private String domain;
-    private int wait;
     private String host;
-
-    public String getHost() {
-        return protocol + "://" + domain;
-    }
+    private int wait;
 }
Index: src/test/resources/settings.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"browserName\": \"chrome\",\r\n  \"isRemote\": false,\r\n  \"remoteConnectionUrl\": \"http://localhost:4444/wd/hub\",\r\n  \"isElementHighlightEnabled\": true,\r\n  \"driverSettings\": {\r\n    \"chrome\": {\r\n      \"capabilities\": {\r\n      },\r\n      \"options\": {\r\n        \"intl.accept_languages\": \"en\",\r\n        \"safebrowsing.enabled\": \"false\",\r\n        \"profile.default_content_settings.popups\": \"0\",\r\n        \"disable-popup-blocking\": \"true\",\r\n        \"download.prompt_for_download\": \"false\",\r\n        \"download.default_directory\": \"./src/test/resources/\"\r\n      },\r\n      \"loggingPreferences\": {\r\n        \"Performance\": \"All\"\r\n      },\r\n      \"pageLoadStrategy\": \"Normal\",\r\n      \"startArguments\": []\r\n    },\r\n    \"edge\": {\r\n      \"capabilities\": {\r\n      },\r\n      \"options\": {\r\n        \"intl.accept_languages\": \"en\",\r\n        \"safebrowsing.enabled\": \"true\",\r\n        \"profile.default_content_settings.popups\": \"0\",\r\n        \"disable-popup-blocking\": \"true\",\r\n        \"download.prompt_for_download\": \"false\",\r\n        \"download.default_directory\": \"./downloads\"\r\n      },\r\n      \"loggingPreferences\": {\r\n        \"Performance\": \"All\"\r\n      },\r\n      \"startArguments\": []\r\n    },\r\n    \"firefox\": {\r\n      \"capabilities\": {\r\n      },\r\n      \"options\": {\r\n        \"intl.accept_languages\": \"en\",\r\n        \"browser.download.dir\": \"./downloads\",\r\n        \"browser.download.folderList\": 2,\r\n        \"browser.helperApps.neverAsk.saveToDisk\": \"application/octet-stream, application/x-debian-package, application/x-www-form-urlencod, application/json, application/x-compressed, application/x-zip-compressed, application/zip, multipart/x-zip, text/plain, text/csv\",\r\n        \"browser.helperApps.alwaysAsk.force\": false,\r\n        \"browser.download.manager.alertOnEXEOpen\": false,\r\n        \"browser.download.manager.focusWhenStarting\": false,\r\n        \"browser.download.useDownloadDir\": true,\r\n        \"browser.download.manager.showWhenStarting\": false,\r\n        \"browser.download.manager.closeWhenDone\": true,\r\n        \"browser.download.manager.showAlertOnComplete\": false,\r\n        \"browser.download.manager.useWindow\": false,\r\n        \"browser.download.panel.shown\": false\r\n      },\r\n      \"startArguments\": []\r\n    },\r\n    \"iexplorer\": {\r\n      \"capabilities\": {\r\n        \"ignoreProtectedModeSettings\": true\r\n      }\r\n    },\r\n    \"safari\": {\r\n      \"downloadDir\": \"/Users/gabed/Downloads\"\r\n    },\r\n    \"opera\": {\r\n      \"binaryLocation\": \"%USERPROFILE%\\\\AppData\\\\Local\\\\Programs\\\\Opera\\\\launcher.exe\",\r\n      \"capabilities\": {\r\n        \"unhandledPromptBehavior\": \"ignore\"\r\n      },\r\n      \"options\": {\r\n        \"intl.accept_languages\": \"en\",\r\n        \"safebrowsing.enabled\": \"true\",\r\n        \"profile.default_content_settings.popups\": \"0\",\r\n        \"disable-popup-blocking\": \"true\",\r\n        \"download.prompt_for_download\": \"false\",\r\n        \"download.default_directory\": \"./downloads\"\r\n      },\r\n      \"startArguments\": [\r\n        \"--remote-debugging-port=9222\",\r\n        \"--no-sandbox\",\r\n        \"--disable-dev-shm-usage\"\r\n      ]\r\n    },\r\n    \"yandex\": {\r\n      \"binaryLocation\": \"%USERPROFILE%\\\\AppData\\\\Local\\\\Yandex\\\\YandexBrowser\\\\Application\\\\browser.exe\",\r\n      \"capabilities\": {\r\n      },\r\n      \"options\": {\r\n        \"intl.accept_languages\": \"en\",\r\n        \"safebrowsing.enabled\": \"true\",\r\n        \"profile.default_content_settings.popups\": \"0\",\r\n        \"disable-popup-blocking\": \"true\",\r\n        \"download.prompt_for_download\": \"false\",\r\n        \"download.default_directory\": \"./downloads\"\r\n      },\r\n      \"startArguments\": []\r\n    }\r\n  },\r\n  \"timeouts\": {\r\n    \"timeoutImplicit\": 0,\r\n    \"timeoutCondition\": 30,\r\n    \"timeoutScript\": 10,\r\n    \"timeoutPageLoad\": 15,\r\n    \"timeoutPollingInterval\": 300,\r\n    \"timeoutCommand\": 120\r\n  },\r\n  \"retry\": {\r\n    \"number\": 2,\r\n    \"pollingInterval\": 300\r\n  },\r\n  \"logger\": {\r\n    \"language\": \"en\",\r\n    \"logPageSource\": true\r\n  },\r\n  \"elementCache\": {\r\n    \"isEnabled\": false\r\n  },\r\n  \"visualization\": {\r\n    \"imageExtension\": \"png\",\r\n    \"maxFullFileNameLength\": 255,\r\n    \"defaultThreshold\": 0.012,\r\n    \"comparisonWidth\": 16,\r\n    \"comparisonHeight\": 16,\r\n    \"pathToDumps\": \"./src/test/resources/visualDumps/\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/resources/settings.json b/src/test/resources/settings.json
--- a/src/test/resources/settings.json	(revision 23519ffc95f304ac088c5f0540bd4cc4a202bc5e)
+++ b/src/test/resources/settings.json	(date 1723237307000)
@@ -9,11 +9,11 @@
       },
       "options": {
         "intl.accept_languages": "en",
-        "safebrowsing.enabled": "false",
+        "safebrowsing.enabled": "true",
         "profile.default_content_settings.popups": "0",
         "disable-popup-blocking": "true",
         "download.prompt_for_download": "false",
-        "download.default_directory": "./src/test/resources/"
+        "download.default_directory": "./downloads"
       },
       "loggingPreferences": {
         "Performance": "All"
@@ -63,7 +63,7 @@
       }
     },
     "safari": {
-      "downloadDir": "/Users/gabed/Downloads"
+      "downloadDir": "/Users/username/Downloads"
     },
     "opera": {
       "binaryLocation": "%USERPROFILE%\\AppData\\Local\\Programs\\Opera\\launcher.exe",
Index: src/test/java/utils/SettingsTestData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package utils;\r\n\r\nimport aquality.selenium.browser.AqualityServices;\r\nimport aquality.selenium.core.utilities.ISettingsFile;\r\nimport aquality.selenium.core.utilities.JsonSettingsFile;\r\nimport com.google.gson.Gson;\r\nimport models.*;\r\nimport lombok.experimental.UtilityClass;\r\n\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileReader;\r\n\r\n@UtilityClass\r\npublic class SettingsTestData {\r\n    public final String RESOURCES_PATH = \"src/test/resources/\";\r\n    public final String TEST_DATA_PATH = RESOURCES_PATH + \"testdata/\";\r\n    private final String ENVIRONMENT_PATH = RESOURCES_PATH + \"environment/\";\r\n    private final String USER_FILE_PATH = TEST_DATA_PATH + \"userData.json\";\r\n    private final String DATA_TABLE_FILE_PATH = TEST_DATA_PATH + \"dataTableData.json\";\r\n    private final String FILE_DATA_PATH = TEST_DATA_PATH + \"fileData.json\";\r\n    private final ISettingsFile ENVIRONMENT_CONFIG = new JsonSettingsFile(\"env.json\");\r\n    private final Gson GSON = new Gson();\r\n\r\n    public EnvData getEnvData() {\r\n        String envConfigPath = \"%s%s.json\".formatted(ENVIRONMENT_PATH, getCurrentEnvironment());\r\n        return deserializeJson(envConfigPath, EnvData.class);\r\n    }\r\n\r\n    public UserData getUserData() {\r\n        return deserializeJson(USER_FILE_PATH, UserData.class);\r\n    }\r\n\r\n    public DataTableData getDataTableData() {\r\n        return deserializeJson(DATA_TABLE_FILE_PATH, DataTableData.class);\r\n    }\r\n\r\n    public FileData getFileData() {\r\n        return deserializeJson(FILE_DATA_PATH, FileData.class);\r\n    }\r\n\r\n    private String getCurrentEnvironment() {\r\n        return ENVIRONMENT_CONFIG.getValue(\"/env\").toString();\r\n    }\r\n\r\n    private <T> T deserializeJson(String filePath, Class<T> tClass) {\r\n        try {\r\n            return GSON.fromJson(new FileReader(filePath), tClass);\r\n        } catch (FileNotFoundException e) {\r\n            AqualityServices.getLogger().error(\"Settings file %s not found or incorrect. Error msg: %s\".formatted(filePath, e));\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/utils/SettingsTestData.java b/src/test/java/utils/SettingsTestData.java
--- a/src/test/java/utils/SettingsTestData.java	(revision 23519ffc95f304ac088c5f0540bd4cc4a202bc5e)
+++ b/src/test/java/utils/SettingsTestData.java	(date 1723237307000)
@@ -4,8 +4,8 @@
 import aquality.selenium.core.utilities.ISettingsFile;
 import aquality.selenium.core.utilities.JsonSettingsFile;
 import com.google.gson.Gson;
-import models.*;
 import lombok.experimental.UtilityClass;
+import models.*;
 
 import java.io.FileNotFoundException;
 import java.io.FileReader;
@@ -15,9 +15,7 @@
     public final String RESOURCES_PATH = "src/test/resources/";
     public final String TEST_DATA_PATH = RESOURCES_PATH + "testdata/";
     private final String ENVIRONMENT_PATH = RESOURCES_PATH + "environment/";
-    private final String USER_FILE_PATH = TEST_DATA_PATH + "userData.json";
     private final String DATA_TABLE_FILE_PATH = TEST_DATA_PATH + "dataTableData.json";
-    private final String FILE_DATA_PATH = TEST_DATA_PATH + "fileData.json";
     private final ISettingsFile ENVIRONMENT_CONFIG = new JsonSettingsFile("env.json");
     private final Gson GSON = new Gson();
 
@@ -26,18 +24,10 @@
         return deserializeJson(envConfigPath, EnvData.class);
     }
 
-    public UserData getUserData() {
-        return deserializeJson(USER_FILE_PATH, UserData.class);
-    }
-
     public DataTableData getDataTableData() {
         return deserializeJson(DATA_TABLE_FILE_PATH, DataTableData.class);
     }
 
-    public FileData getFileData() {
-        return deserializeJson(FILE_DATA_PATH, FileData.class);
-    }
-
     private String getCurrentEnvironment() {
         return ENVIRONMENT_CONFIG.getValue("/env").toString();
     }
@@ -50,4 +40,4 @@
             throw new RuntimeException(e);
         }
     }
-}
\ No newline at end of file
+}
