Index: src/main/java/org/example/Main.java
===================================================================
diff --git a/src/main/java/org/example/Main.java b/src/main/java/org/example/Main.java
deleted file mode 100644
--- a/src/main/java/org/example/Main.java	(revision 9e135ef08f2c895e7d0b0586e9cb9894449e24dd)
+++ /dev/null	(revision 9e135ef08f2c895e7d0b0586e9cb9894449e24dd)
@@ -1,7 +0,0 @@
-package org.example;
-
-public class Main {
-    public static void main(String[] args) {
-        System.out.println("Hello world!");
-    }
-}
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>org.example</groupId>\r\n    <artifactId>unit_selenium</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.seleniumhq.selenium</groupId>\r\n            <artifactId>selenium-java</artifactId>\r\n            <version>4.19.1</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.testng</groupId>\r\n            <artifactId>testng</artifactId>\r\n            <version>7.8.0</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 9e135ef08f2c895e7d0b0586e9cb9894449e24dd)
+++ b/pom.xml	(date 1724945913687)
@@ -26,6 +26,7 @@
             <version>7.8.0</version>
             <scope>test</scope>
         </dependency>
+
     </dependencies>
 
 </project>
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>target/\r\n!.mvn/wrapper/maven-wrapper.jar\r\n!**/src/main/**/target/\r\n!**/src/test/**/target/\r\n\r\n### IntelliJ IDEA ###\r\n.idea/modules.xml\r\n.idea/jarRepositories.xml\r\n.idea/compiler.xml\r\n.idea/libraries/\r\n*.iws\r\n*.iml\r\n*.ipr\r\n\r\n### Eclipse ###\r\n.apt_generated\r\n.classpath\r\n.factorypath\r\n.project\r\n.settings\r\n.springBeans\r\n.sts4-cache\r\n\r\n### NetBeans ###\r\n/nbproject/private/\r\n/nbbuild/\r\n/dist/\r\n/nbdist/\r\n/.nb-gradle/\r\nbuild/\r\n!**/src/main/**/build/\r\n!**/src/test/**/build/\r\n\r\n### VS Code ###\r\n.vscode/\r\n\r\n### Mac OS ###\r\n.DS_Store\r\n\r\n# Compiled class file\r\n*.class\r\n\r\n# Log file\r\n*.log\r\n\r\n# BlueJ files\r\n*.ctxt\r\n\r\n# Mobile Tools for Java (J2ME)\r\n.mtj.tmp/\r\n\r\n# Package Files #\r\n*.jar\r\n*.war\r\n*.nar\r\n*.ear\r\n*.zip\r\n*.tar.gz\r\n*.rar\r\n\r\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\r\nhs_err_pid*\r\nreplay_pid*
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	(revision 9e135ef08f2c895e7d0b0586e9cb9894449e24dd)
+++ b/.gitignore	(date 1724945913693)
@@ -60,4 +60,18 @@
 
 # virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
 hs_err_pid*
-replay_pid*
\ No newline at end of file
+replay_pid*
+
+#IDE generated files
+.idea/
+target/
+*.iml
+
+# Allure
+.allure/
+allure-results/
+allure-report/
+
+#Downloads
+downloads/
+
Index: src/test/java/tests/FileDownloadTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests;\r\n\r\nimport org.openqa.selenium.By;\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.Test;\r\n\r\npublic class FileDownloadTest extends BaseTest {\r\n    private final String fileName = \"Test.txt\";\r\n    private final By fileDownload = By.xpath(String.format(PRECISE_TEXT_XPATH, \"File Download\"));\r\n    private final By fileNameXpath = By.xpath(String.format(PRECISE_TEXT_XPATH, fileName));\r\n\r\n    @Test\r\n    public void fileDownloadTest() {\r\n        driver.findElement(fileDownload).click();\r\n        Assert.assertTrue(driver.findElement(fileNameXpath).isDisplayed(), \"File is not displayed\");\r\n        driver.findElement(fileNameXpath).click();\r\n        // todo: assert file is downloaded\r\n    }\r\n\r\n    // todo: delete file\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/tests/FileDownloadTest.java b/src/test/java/tests/FileDownloadTest.java
--- a/src/test/java/tests/FileDownloadTest.java	(revision 9e135ef08f2c895e7d0b0586e9cb9894449e24dd)
+++ b/src/test/java/tests/FileDownloadTest.java	(date 1724945913699)
@@ -1,21 +1,50 @@
-package tests;
-
-import org.openqa.selenium.By;
-import org.testng.Assert;
-import org.testng.annotations.Test;
-
-public class FileDownloadTest extends BaseTest {
-    private final String fileName = "Test.txt";
-    private final By fileDownload = By.xpath(String.format(PRECISE_TEXT_XPATH, "File Download"));
-    private final By fileNameXpath = By.xpath(String.format(PRECISE_TEXT_XPATH, fileName));
-
-    @Test
-    public void fileDownloadTest() {
-        driver.findElement(fileDownload).click();
-        Assert.assertTrue(driver.findElement(fileNameXpath).isDisplayed(), "File is not displayed");
-        driver.findElement(fileNameXpath).click();
-        // todo: assert file is downloaded
-    }
-
-    // todo: delete file
-}
+//package tests;
+//
+//import com.sun.source.tree.ConditionalExpressionTree;
+//import org.openqa.selenium.By;
+//import org.openqa.selenium.TimeoutException;
+//import org.openqa.selenium.chrome.ChromeOptions;
+//import org.testng.Assert;
+//import org.testng.annotations.AfterMethod;
+//import org.testng.annotations.Test;
+//import org.awaitility.Awaitility;
+//
+//import java.io.File;
+//import java.util.concurrent.TimeUnit;
+//
+//
+//public class FileDownloadTest extends BaseTest {
+//    private final String fileName="test.txt";
+//    private final By fileDownload=By.xpath(String.format(PRECISE_TEXT_XPATH,"File Download"));
+//    private final By fileNameXpath=By.xpath(String.format(PRECISE_TEXT_XPATH,fileName));
+//    private final String FILE_PATH=RELATIVE_RESOURCE_PATH+fileName;
+//    private final File downloadedFile=new File(FILE_PATH);
+//    ChromeOptions options;
+//    @Test
+//    public void fileDownloadTest() {
+//        driver.findElement(fileDownload).click();
+//        Assert.assertTrue(driver.findElement(fileNameXpath).isDisplayed(),"File is not displayed");
+//        driver.findElement(fileNameXpath).click();
+//        Assert.assertTrue(fileExists(downloadedFile),"File is not downloaded!");
+//
+//
+//        // todo: assert file is downloaded
+//    }
+//
+//    private boolean fileExists(File file){
+//        try{
+//            Awaitility.await().atMost(MAX_WAIT,TimeUnit.SECONDS).untill(file::exists);
+//        }
+//        catch (ConditionTimeoutException e){
+//            return false;
+//        }
+//        return true;
+//    }
+//
+//    @AfterMethod
+//    public void deleteFile(){
+//        if(downloadedFile.exists()){
+//            downloadedFile.delete();
+//        }
+//    }
+//}
